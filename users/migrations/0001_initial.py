# Generated by Django 5.0.4 on 2024-05-02 04:46

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import users.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(db_index=True, max_length=32, unique=True)),
                ('name_uc', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.UUID('dea5bf55-dd63-446b-bce0-7ae2e0c05e00'), editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=32, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(db_index=True, max_length=32, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.UUID('7650d24c-1b0d-41a1-b370-c4518d99117d'), editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
                ('name_uc', models.CharField(max_length=32)),
                ('latitude', models.CharField(max_length=32, null=True)),
                ('longitude', models.CharField(max_length=32, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.country')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=32)),
                ('designation', models.CharField(choices=users.models.DesignationChoice.choices, db_index=True, max_length=32)),
                ('employee_id', models.CharField(db_index=True, max_length=16, unique=True)),
                ('picture', models.ImageField(null=True, upload_to='profile')),
                ('mobile', models.CharField(max_length=16, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('dob', models.DateField(null=True)),
                ('door_no', models.CharField(max_length=32)),
                ('street', models.CharField(max_length=64)),
                ('locality', models.CharField(max_length=32)),
                ('gender', models.CharField(choices=users.models.GenderChoice.choices, max_length=12)),
                ('passport_no', models.CharField(max_length=16, null=True, unique=True)),
                ('nationality', models.CharField(max_length=32, null=True)),
                ('marital_status', models.CharField(choices=users.models.MaritalStatusChoice.choices, max_length=16, null=True)),
                ('no_of_children', models.IntegerField(null=True)),
                ('blood_group', models.CharField(choices=users.models.BloodGroupChoice.choices, max_length=12, null=True)),
                ('social_id_no', models.CharField(max_length=16, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('reporting_to', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.city')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.department')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EducationDetails',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.UUID('726edf1d-afcc-400b-95b2-3abece239f0d'), editable=False, primary_key=True, serialize=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('institute_name', models.CharField(default=None, max_length=128)),
                ('percentage', models.FloatField()),
                ('course', models.CharField(max_length=64)),
                ('level', models.CharField(default=None, max_length=32, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FamilyMembers',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.UUID('2ac855f3-d73d-4d40-9237-7dc931a61f86'), editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
                ('relationship', models.CharField(default=None, max_length=32, null=True)),
                ('mobile', models.CharField(max_length=12)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('dob', models.DateTimeField(null=True)),
                ('is_emergency_contact', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.UUID('a5918fe4-68d5-45d8-8bc6-740050e962de'), editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
                ('name_uc', models.CharField(max_length=32)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.country')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.state'),
        ),
        migrations.CreateModel(
            name='UserBankdetails',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.UUID('eeff3d44-7eda-46e6-9788-80a7698aa9c3'), editable=False, primary_key=True, serialize=False)),
                ('bank_name', models.CharField(max_length=32)),
                ('ifsc', models.CharField(max_length=16)),
                ('base_branch', models.CharField(max_length=32, null=True)),
                ('pan_card', models.CharField(max_length=16, null=True)),
                ('is_company_issued', models.BooleanField(db_index=True, default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserExperience',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.UUID('84e85e54-a6c4-43b6-8489-4f34c3366930'), editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=64)),
                ('place_of_work', models.CharField(max_length=50)),
                ('start_datetime', models.DateField(db_index=True, default=None)),
                ('end_datetime', models.DateField(db_index=True)),
                ('skills', models.CharField(max_length=512, null=True)),
                ('achievements', models.CharField(max_length=512, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
